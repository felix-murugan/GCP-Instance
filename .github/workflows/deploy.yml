name: Terraform GCP Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  ZONE: us-central1-a

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

      - name: Wait for FastAPI health check
        if: github.ref == 'refs/heads/main'
        run: |
          VM_IP=$(gcloud compute instances describe server-1 --zone=${{ env.ZONE }} --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          for i in {1..30}; do
            if curl -s "http://$VM_IP:8000/healthz" > /dev/null; then
              echo "✅ FastAPI is up!"
              exit 0
            fi
            echo "⏳ Waiting for FastAPI... ($i/30)"
            sleep 20
          done
          echo "❌ FastAPI did not respond in time"
          exit 1
